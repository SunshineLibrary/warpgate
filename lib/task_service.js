// Generated by CoffeeScript 1.6.3
(function() {
  var TaskQueue, TaskService, clc, events, util;

  clc = require('cli-color');

  util = require('util');

  events = require('events');

  TaskQueue = require('./task_queue').TaskQueue;

  exports.TaskService = TaskService = function(connectionParams, role, hostname) {
    this.started = false;
    this.handlers = {};
    this.role = role;
    this.hostname = hostname;
    this.taskQueue = new TaskQueue(connectionParams, role, hostname);
    return this;
  };

  TaskService.prototype.start = function(callback) {
    var self;
    self = this;
    self.taskQueue.removeAllListeners('data');
    self.taskQueue.on('task', function(task) {
      return self.handleTask(task);
    });
    return self.taskQueue.start(function() {
      self.started = true;
      if (callback) {
        return callback();
      }
    });
  };

  TaskService.prototype.end = function() {
    return this.taskQueue.end();
  };

  TaskService.prototype.handleTask = function(task) {
    var handler;
    handler = this.handlers[task.action];
    if (handler) {
      return handler.handleTask(task);
    } else {
      return util.log("TaskService: No handler found for action[" + task.action + "]");
    }
  };

  TaskService.prototype.setHandler = function(action, handler) {
    if (this.started) {
      throw new Error('TaskService: You must set handlers before calling start() ');
    }
    if (action && handler) {
      return this.handlers[action] = handler;
    }
  };

  TaskService.prototype.removeHandler = function(action) {
    if (action && this.handlers[action]) {
      return delete handler[action];
    }
  };

}).call(this);
